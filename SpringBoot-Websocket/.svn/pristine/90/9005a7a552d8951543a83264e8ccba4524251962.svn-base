import React, { Component } from 'react';
import { Dialog, Button, Icon, Form, Input, Field } from '@icedesign/base';
import IceContainer from '@icedesign/container';
import { enquireScreen } from 'enquire-js';

const FormItem = Form.Item;

export default class FormDialog extends Component {
  static displayName = 'FormDialog';

  constructor(props) {
    super(props);
    this.state = {
      visible: false,
      isMobile: false,
      //dataIndex: null,
    };
    this.field = new Field(this);
  }

  handleSubmit = () => {
    this.field.validate((errors, values) => {
      if (errors) {
        console.log('Errors in form!!!');
        return;
      }

      //const { dataIndex } = this.state;
      //this.props.getFormValues(dataIndex, values);
      this.setState({
        visible: false,
      });
    });
  };

  componentDidMount() {
    this.enquireScreenRegister();
  }

  enquireScreenRegister = () => {
    const mediaCondition = 'only screen and (max-width: 720px)';

    enquireScreen((mobile) => {
      this.setState({
        isMobile: mobile,
      });
    }, mediaCondition);
  };

  showDialog = () => {
    this.setState({
      visible: true,
    });
  };

  hideDialog = () => {
    this.setState({
      visible: false,
    });
  };

  render() {
    const { isMobile } = this.state;
    const init = this.field.init;
    const dialogStyle = {
      width: isMobile ? '320px' : '640px',
      height: isMobile ? 'auto' : '340px',
    };
    const formItemLayout = {
      labelCol: {
        fixedSpan: 6,
      },
      wrapperCol: {
        span: 14,
      },
    };

    return (
      <span>
        <Dialog
          className="confirm-dialog"
          style={{ ...dialogStyle }}
          autoFocus={false}
          footerAlign="center"
          title="增加"
          onOk={this.handleSubmit}
          onCancel={this.hideDialog}
          onClose={this.hideDialog}
          {...this.props}
          visible={this.state.visible}
        >
          <Form direction="ver" field={this.field}>
            <FormItem label="产线：" {...formItemLayout}>
              <Input
                {...init('title', {
                  rules: [{ required: true, message: '必填选项' }],
                })}
              />
            </FormItem>

            <FormItem label="工位号：" {...formItemLayout}>
              <Input
                {...init('author', {
                  rules: [{ required: true, message: '必填选项' }],
                })}
              />
            </FormItem>

            <FormItem label="工位顺序：" {...formItemLayout}>
              <Input
                {...init('status', {
                  rules: [{ required: true, message: '必填选项' }],
                })}
              />
            </FormItem>
            <FormItem label="工位总数：" {...formItemLayout}>
              <Input
                {...init('status', {
                  rules: [{ required: true, message: '必填选项' }],
                })}
              />
            </FormItem>
            <FormItem label="工位MAC：" {...formItemLayout}>
              <Input
                {...init('status', {
                  rules: [{ required: true, message: '必填选项' }],
                })}
              />
            </FormItem>
          </Form>
        </Dialog>
        <Button  onClick={this.showDialog} style={styles.batchBtn}>
          <Icon type="add" />增加
        </Button>
      </span>
    );
  }
}

const styles = {
  batchBtn: {
    marginRight: '10px',
  },
};
