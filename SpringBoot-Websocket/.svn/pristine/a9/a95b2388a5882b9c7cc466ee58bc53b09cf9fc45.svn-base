package com.atoz.vfs.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.atoz.vfs.pojo.po.Vworkshopstation;
import com.atoz.vfs.pojo.vo.PageVO;
import com.atoz.vfs.pojo.vo.ResultVO;
import com.atoz.vfs.service.IVstationService;
import com.atoz.vfs.util.NetworkUtil;
import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;

/**
 * 工位相关信息管理
 * @author che
 *
 */
@RestController
@RequestMapping("/station")
public class VstationController {
	
	@Resource
	private IVstationService vstationService;

	/**
	 * 一览查询
	 * @param dg
	 * @return
	 */
	@RequestMapping("list")
	public ResultVO listStationByCriteria(@RequestBody PageVO<Vworkshopstation> dg){
		// 分页处理
		Page<Vworkshopstation> page = PageHelper.startPage(dg.getPageIndex(), dg.getPageSize());
		// 一览查询
		List<Vworkshopstation> list = vstationService.listByCriteria(dg.getCriteria());
		// 总数统计
		Long total = page.getTotal();
		
		Map<String, Object> data = new HashMap<>();
		data.put("list", list);
		data.put("total", total);
		return new ResultVO().ok(data);
	}
	
	/**
	 * 插入数据
	 * @param station
	 * @return
	 */
	@RequestMapping(method=RequestMethod.POST)
	public ResultVO insertStation(@RequestBody Vworkshopstation station){
		
		int i = vstationService.insertEntity(station);
		
		if(i > 0) {
			return new ResultVO().ok();
		} else {
			return new ResultVO().error();
		}
	}
	
	/**
	 * 更新数据
	 * @param station
	 * @return
	 */
	@RequestMapping(method=RequestMethod.PUT)
	public ResultVO updateStation(@RequestBody Vworkshopstation station){
		
		int i = vstationService.updateEntity(station);
		
		if(i > 0) {
			return new ResultVO().ok();
		} else {
			return new ResultVO().error();
		}
	}
	
	/**
	 * 删除数据
	 * @param station
	 * @return
	 */
	@RequestMapping(method=RequestMethod.DELETE)
	public ResultVO deleteStation(@RequestBody Vworkshopstation station){
		
		int i = vstationService.deleteEntityByKey(station.getStationId());
		
		if(i > 0) {
			return new ResultVO().ok();
		} else {
			return new ResultVO().error();
		}
	}
	
	/**
	 * 根据主键删除多条数据
	 * @param stationIds
	 * @return
	 */
	@RequestMapping(value="/batch/{stationIds}", method=RequestMethod.DELETE)
	public ResultVO deleteStationBatch(@PathVariable("stationIds") String stationIds){
		
		int i = vstationService.deleteEntityByKeys(stationIds);
		
		if(i > 0) {
			return new ResultVO().ok();
		} else {
			return new ResultVO().error();
		}
	}
	
	/**
	 * 打开页面初始化
	 * @param request
	 * @return
	 */
	@RequestMapping(value="nav", method=RequestMethod.GET)
	public ResultVO getMAC(HttpServletRequest request){
		// 根据ip获取mac
		Map<String, Object> data = new HashMap<>();
		String mac = NetworkUtil.getMacAddress(request.getRemoteAddr());
		data.put("mac", mac);
		
		Vworkshopstation station = new Vworkshopstation();
		station.setStationMac(mac);
		station = vstationService.selectByTemp(station);
		data.put("role", station.getStationRole());
		
		return new ResultVO().ok(data);
	}
}
