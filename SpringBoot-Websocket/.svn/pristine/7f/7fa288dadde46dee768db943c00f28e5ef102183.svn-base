import React, { Component } from 'react';
import { Balloon, Icon } from '@icedesign/base';
import IceImg from '@icedesign/img';
import Layout from '@icedesign/layout';
import { Nav, Menu } from "@icedesign/base";
import CustomIcon from './CustomIcon';
import cx from 'classnames';
import { Link } from 'react-router';
import { headerNavs } from '../navs';
import Logo from './Logo';
import MobxData from './mac';
import { observer } from 'mobx-react'

const { Item, PopupItem } = Nav;

/**
* 监听MobxData
*/
@observer
export default class Header extends Component {

  constructor(props) {
    super(props);
    this.state = {
      stationMAC: null
    };
  }

  componentDidMount() {
    // TODO:异步setState
    this.setState({
      stationMAC: ''
    }, () => console.log(this.state))
  }

  render() {
    const { width, theme, isMobile, className, style, ...others } = this.props;

    return (
      <Layout.Header
        {...others}
        theme={theme}
        className={cx('ice-design-layout-header', className)}
        style={{ ...style, width }}
      >
        <Logo />
        <div
          className="ice-design-layout-header-menu"
          style={{ display: 'flex' }}
        >
          {/* Header 菜单项 begin */}
          {headerNavs && headerNavs.length > 0 ? (
            <Nav type="text" direction="hoz" activeDirection="bottom" className="navbar">
              {headerNavs.map((nav, idx) => {
                if(nav.role.indexOf(MobxData.MOBX_DATA.role) < 0) {
                  return;
                }
                const linkProps = {};
                if (nav.newWindow) {
                  linkProps.href = nav.to;
                  linkProps.target = '_blank';
                } else if (nav.external) {
                  linkProps.href = nav.to;
                } else {
                  linkProps.to = nav.to;
                }
                return (
                  nav.children ? (
                    <PopupItem hidden key={idx} icon={nav.icon ? (
                      <CustomIcon type={nav.icon} size="small" style={{ paddingRight: '4px' }} />
                    ) : null} label={!isMobile ? nav.text : null}>
                      <Menu>
                        {nav.children.map((menu, midx) => {
                          const linkProps = { to: menu.to };
                          return (
                            <Menu.Item key={idx+''+midx}>
                              <Link {...linkProps} style={{ fontSize: '15px' }}>
                                {!isMobile ? menu.text : null}
                              </Link>
                            </Menu.Item>
                          )
                        })}
                      </Menu>
                    </PopupItem>
                  ) : (
                    <Item key={idx} >
                      <Link {...linkProps} style={{ fontSize: '15px' }}>
                        {nav.icon ? (
                          <CustomIcon type={nav.icon} size="small" style={{ paddingRight: '4px' }} />
                        ) : null}
                        {!isMobile ? nav.text : null}
                      </Link>
                    </Item>
                  )
                );
              })}
            </Nav>
          ) : null}
          {/* Header 菜单项 end */}

          {/* Header 右侧内容块 */}

          <Balloon
            trigger={
              <div
                className="ice-design-header-userpannel"
                style={{
                  display: 'flex',
                  alignItems: 'center',
                  fontSize: 12,
                }}
              >
                <IceImg
                  height={40}
                  width={40}
                  src="http://localhost:8081/vfs/logo.png"
                  className="user-avatar"
                />
                <div className="user-profile">
                  <span className="user-name" style={{ fontSize: '13px' }}>
                    陈宏恩
                  </span>
                  <br />
                  <span
                    id="mac"
                    className="user-department"
                    style={{ fontSize: '12px' }}
                  >
                    {MobxData.MOBX_DATA.mac}
                  </span>
                </div>
                <Icon
                  type="arrow-down-filling"
                  size="xxs"
                  className="icon-down"
                />
              </div>
            }
            closable={false}
            className="user-profile-menu"
          >
            <ul>
              <li className="user-profile-menu-item">
                <Link to="/">
                  <CustomIcon type="tixing" />通知
                </Link>
              </li>
              <li className="user-profile-menu-item">
                <Link to="/">
                  <CustomIcon type="rizhishezhi" />退出
                </Link>
              </li>
            </ul>
          </Balloon>
        </div>
      </Layout.Header>
    );
  }
}
